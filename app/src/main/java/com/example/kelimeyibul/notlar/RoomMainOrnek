package com.example.kelimeyibul

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.material3.ElevatedButton
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.collectAsState
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.lifecycle.viewmodel.compose.viewModel
import androidx.lifecycle.viewmodel.viewModelFactory
import com.example.kelimeyibul.data.WordEntity
import com.example.kelimeyibul.ui.theme.KelimeyiBulTheme
import com.example.kelimeyibul.ui.theme.WordViewModel
import kotlinx.coroutines.coroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            KelimeyiBulTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    Greeting("Android")
                }
            }
        }
    }
}
// Room depenecies ekle
// Entity sinifini olustur
// Dao sinifini olustur
// Database'i baslatacak sinifi olustur.
// Application'dan inherit alan sinifi olustur.
// Manifest dosyasini guncelle
// View modeli ve factory metotunu olustur.


@Composable
fun Greeting(
    name: String, modifier: Modifier = Modifier,
    // Burda view modelden bir nesen urettim.
    // Bu nasil oldu? View model icindeki degiskeni cagirdim. O bir nesne donduruyor. Bende
    // donen nesneyi myViewModel isimli degiskene atadim.
    myViewModel: WordViewModel = viewModel(factory = WordViewModel.myFactory)
    // Bu bu arada asagida yapamiyorum. Parametre olarak gecmek zorundayim.
    // myViewModel  WordViewModel tipinde bir degisken yani ondan uretilmis bir nesne.
    // Bunun metotlarina erisebilirim artik
) {
    val coroutineScope = rememberCoroutineScope()
    // Artik bu metotun getFullWords metotunun dindurdugu Flow nesnesini burda collect etcem.
//    Buna state' i collect etmek deniyor.
    val myFullWords = myViewModel.getFullWords().collectAsState(emptyList())
    //

    Column {
        Text(
            text = "Hello my Full Words: ${myFullWords.value}!",
            modifier = modifier
        )

        ElevatedButton(
            onClick = {
                println("ekleye tiklandi")
                coroutineScope.launch {
                    // Bu haliye db ye veri girisi yapabiliyorum.
                    println("Launch basladi")
                    delay(3000);
                    val word: WordEntity = WordEntity(1, "Birinci Word", "Birinci Meaning")
                    myViewModel.saveWord(word)
                    println("ekleme yapildi mi?")
                }

            }) {
            Text(text = "Ekle")

        }
    }

}

@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    KelimeyiBulTheme {
        Greeting("Android")
    }
}